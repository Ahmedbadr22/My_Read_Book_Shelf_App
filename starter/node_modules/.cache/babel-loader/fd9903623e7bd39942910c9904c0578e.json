{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sc-Project\\\\nd0191-c1-myreads\\\\starter\\\\src\\\\componants\\\\book\\\\BookCard.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookCard = ({\n  book,\n  OnBookShelfUpdated\n}) => {\n  _s();\n\n  const [bookShelf, setBookShelf] = useState(book.shelf);\n  /**\r\n  * @description Function To Apply Change Shelf On Book By Get Selected Shelf\r\n  * @param event - event object\r\n  * @return {VoidFunction}\r\n  */\n\n  const handelSelection = event => {\n    const shelf = event.target.value;\n\n    if (shelf !== book.shelf) {\n      OnBookShelfUpdated(book, shelf);\n      setBookShelf(shelf);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-cover\",\n        style: {\n          width: 128,\n          height: 193,\n          backgroundImage: book.imageLinks ? `url(\"${book.imageLinks.smallThumbnail}\")` : `url()`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-shelf-changer\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: book.shelf ? bookShelf : \"none\",\n          onChange: handelSelection,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            disabled: true,\n            children: \"Move to...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"currentlyReading\",\n            children: \"Currently Reading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"wantToRead\",\n            children: \"Want to Read\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"read\",\n            children: \"Read\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"none\",\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-title\",\n      children: book.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-authors\",\n      children: book.authors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 11\n  }, this);\n};\n\n_s(BookCard, \"Gfo/LxTAFymJskm9fy2jJgAuESk=\");\n\n_c = BookCard;\nBookCard.propTypes = {\n  book: PropTypes.object.isRequired,\n  OnBookShelfUpdated: PropTypes.func.isRequired\n};\nexport default BookCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookCard\");","map":{"version":3,"sources":["D:/Sc-Project/nd0191-c1-myreads/starter/src/componants/book/BookCard.js"],"names":["useState","PropTypes","BookCard","book","OnBookShelfUpdated","bookShelf","setBookShelf","shelf","handelSelection","event","target","value","width","height","backgroundImage","imageLinks","smallThumbnail","title","authors","propTypes","object","isRequired","func"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAA+B;AAAA;;AAE5C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAACG,IAAI,CAACI,KAAN,CAA1C;AAEC;AACL;AACA;AACA;AACA;;AACI,QAAMC,eAAe,GAAIC,KAAD,IAAU;AAC9B,UAAMF,KAAK,GAAGE,KAAK,CAACC,MAAN,CAAaC,KAA3B;;AAEA,QAAGJ,KAAK,KAAKJ,IAAI,CAACI,KAAlB,EAAwB;AACpBH,MAAAA,kBAAkB,CAACD,IAAD,EAAOI,KAAP,CAAlB;AACAD,MAAAA,YAAY,CAACC,KAAD,CAAZ;AACH;AACJ,GAPD;;AASA,sBACM;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AACI,QAAA,SAAS,EAAC,YADd;AAEI,QAAA,KAAK,EAAE;AAACK,UAAAA,KAAK,EAAE,GAAR;AAAaC,UAAAA,MAAM,EAAE,GAArB;AAA0BC,UAAAA,eAAe,EAAEX,IAAI,CAACY,UAAL,GAAmB,QAAOZ,IAAI,CAACY,UAAL,CAAgBC,cAAe,IAAzD,GAAgE;AAA3G;AAFX;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACI;AAAQ,UAAA,KAAK,EAAEb,IAAI,CAACI,KAAL,GAAaF,SAAb,GAAyB,MAAxC;AAAgD,UAAA,QAAQ,EAAEG,eAA1D;AAAA,kCACI;AAAQ,YAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAQ,YAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI;AAAQ,YAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ,eASI;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAqBI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAA6BL,IAAI,CAACc;AAAlC;AAAA;AAAA;AAAA;AAAA,YArBJ,eAsBI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBAA+Bd,IAAI,CAACe;AAApC;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADN;AA0BH,CA5CD;;GAAMhB,Q;;KAAAA,Q;AA8CNA,QAAQ,CAACiB,SAAT,GAAoB;AAChBhB,EAAAA,IAAI,EAAGF,SAAS,CAACmB,MAAV,CAAiBC,UADR;AAEhBjB,EAAAA,kBAAkB,EAAEH,SAAS,CAACqB,IAAV,CAAeD;AAFnB,CAApB;AAKA,eAAenB,QAAf","sourcesContent":["import {useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BookCard = ({book, OnBookShelfUpdated}) =>{\r\n\r\n    const [bookShelf, setBookShelf] = useState(book.shelf);\r\n\r\n     /**\r\n    * @description Function To Apply Change Shelf On Book By Get Selected Shelf\r\n    * @param event - event object\r\n    * @return {VoidFunction}\r\n    */\r\n    const handelSelection = (event) =>{\r\n        const shelf = event.target.value;\r\n\r\n        if(shelf !== book.shelf){\r\n            OnBookShelfUpdated(book, shelf);\r\n            setBookShelf(shelf);\r\n        }\r\n    };\r\n\r\n    return(\r\n          <div className=\"book\">\r\n              <div className=\"book-top\">\r\n                  <div\r\n                      className=\"book-cover\"\r\n                      style={{width: 128, height: 193, backgroundImage: book.imageLinks ? `url(\"${book.imageLinks.smallThumbnail}\")` : `url()`,}\r\n                  }\r\n                  />\r\n                  <div className=\"book-shelf-changer\">\r\n                      <select value={book.shelf ? bookShelf : \"none\"} onChange={handelSelection}>\r\n                          <option disabled>\r\n                              Move to...\r\n                          </option>\r\n                          <option value=\"currentlyReading\">\r\n                            Currently Reading\r\n                          </option>\r\n                          <option value=\"wantToRead\">Want to Read</option>\r\n                          <option value=\"read\">Read</option>\r\n                          <option value=\"none\">None</option>\r\n                      </select>\r\n                  </div>\r\n              </div>\r\n              <div className=\"book-title\">{book.title}</div>\r\n              <div className=\"book-authors\">{book.authors}</div>\r\n          </div>\r\n    )\r\n}\r\n\r\nBookCard.propTypes ={\r\n    book : PropTypes.object.isRequired,\r\n    OnBookShelfUpdated: PropTypes.func.isRequired\r\n}\r\n\r\nexport default BookCard"]},"metadata":{},"sourceType":"module"}